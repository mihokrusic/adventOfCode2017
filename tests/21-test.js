const assert = require('assert');
const dayNumber = '21';

const day = require('../solutions/' + dayNumber + '.js');

describe('Day ' + dayNumber, () => {

	var rules = `
		../.. => #.#/###/#.#
		#./.. => ..#/.../###
		##/.. => .../.##/###
		.#/#. => #.#/##./.#.
		##/#. => #../#.#/..#
		##/## => #.#/#../###
		.../.../... => .###/..##/.#../###.
		#../.../... => ##.#/.###/#.../##.#
		.#./.../... => ..../#.##/..../.#.#
		##./.../... => ..#./#.../#.../.###
		#.#/.../... => ..##/####/#.#./..##
		###/.../... => .##./#.#./###./.#..
		.#./#../... => #..#/..#./...#/#.#.
		##./#../... => ##../.##./##.#/#..#
		..#/#../... => #.##/.##./##.#/.###
		#.#/#../... => ...#/#.##/..#./##..
		.##/#../... => #.#./..#./##.#/.#.#
		###/#../... => #..#/...#/..#./##.#
		.../.#./... => .#.#/#.../.##./.#.#
		#../.#./... => #.#./.##./..../.#.#
		.#./.#./... => .#../#.##/..##/..##
		##./.#./... => ..##/##.#/...#/..#.
		#.#/.#./... => ...#/.##./####/.#..
		###/.#./... => ###./####/...#/####
		.#./##./... => ...#/.#.#/#.#./#.#.
		##./##./... => ..../...#/#.#./...#
		..#/##./... => .##./#.../##.#/.#..
		#.#/##./... => .#../.#../...#/....
		.##/##./... => ..#./.##./####/.#..
		###/##./... => ##../.#.#/##../.#..
		.../#.#/... => ..#./.#../.#../.###
		#../#.#/... => ####/..../#..#/#...
		.#./#.#/... => #.##/##../##.#/##.#
		##./#.#/... => ###./..../#.##/###.
		#.#/#.#/... => ###./.#../#.#./#.#.
		###/#.#/... => ...#/#..#/#.#./..##
		.../###/... => .#../...#/...#/....
		#../###/... => ####/#.../##../.#.#
		.#./###/... => ...#/####/.##./#..#
		##./###/... => .###/##.#/..#./.#..
		#.#/###/... => ####/###./.###/.###
		###/###/... => .#.#/..##/..#./##..
		..#/.../#.. => #.../.###/###./...#
		#.#/.../#.. => ..../#.../##../..#.
		.##/.../#.. => ####/####/...#/####
		###/.../#.. => #.../.#../#.#./#.#.
		.##/#../#.. => ##../..#./.#../##.#
		###/#../#.. => ..../#..#/.###/.###
		..#/.#./#.. => ...#/##../.##./##..
		#.#/.#./#.. => #.##/.###/#.#./##.#
		.##/.#./#.. => ..../..../.#.#/#..#
		###/.#./#.. => ##../.#.#/.#.#/####
		.##/##./#.. => #.##/##.#/####/....
		###/##./#.. => ..../..##/#.#./.###
		#../..#/#.. => #.#./...#/#.##/.###
		.#./..#/#.. => ####/#.##/.#../.###
		##./..#/#.. => .##./..#./.#.#/##.#
		#.#/..#/#.. => .#.#/#.##/##../#...
		.##/..#/#.. => ..../.###/####/.#..
		###/..#/#.. => ##.#/##.#/..##/.#..
		#../#.#/#.. => #.##/###./##../....
		.#./#.#/#.. => ..../###./####/###.
		##./#.#/#.. => ##.#/#.##/##../#.##
		..#/#.#/#.. => .###/#.../.#../##..
		#.#/#.#/#.. => ##../##.#/#.../.##.
		.##/#.#/#.. => ...#/..#./.###/##.#
		###/#.#/#.. => #.../#.##/..##/..##
		#../.##/#.. => #.##/#.../.##./##..
		.#./.##/#.. => #.#./#.../..##/.#..
		##./.##/#.. => .###/.#.#/####/.#.#
		#.#/.##/#.. => ####/.#../##.#/.###
		.##/.##/#.. => .#../##.#/####/#.#.
		###/.##/#.. => #.##/#.../...#/....
		#../###/#.. => ###./.#.#/##../#..#
		.#./###/#.. => #..#/..##/..../....
		##./###/#.. => ..#./#.../...#/###.
		..#/###/#.. => ##../..##/##../#.##
		#.#/###/#.. => ..../..#./.###/##..
		.##/###/#.. => #..#/####/.#.#/.##.
		###/###/#.. => ###./#.##/##.#/.#..
		.#./#.#/.#. => #.../####/#.#./.##.
		##./#.#/.#. => ..##/..../.#.#/##..
		#.#/#.#/.#. => ####/..##/####/#...
		###/#.#/.#. => ##.#/#.#./.##./####
		.#./###/.#. => .#.#/.#.#/##.#/###.
		##./###/.#. => .#../###./#.##/#...
		#.#/###/.#. => #.../.###/.#../.#..
		###/###/.#. => #.#./.##./.###/####
		#.#/..#/##. => .#../#..#/###./#.##
		###/..#/##. => #.#./####/###./###.
		.##/#.#/##. => .#.#/...#/..../#.##
		###/#.#/##. => ...#/..../#.##/####
		#.#/.##/##. => ##../.#../.#.#/##..
		###/.##/##. => #.../#.#./#.#./#.#.
		.##/###/##. => ..../#.##/#.##/..##
		###/###/##. => ####/##.#/#..#/.##.
		#.#/.../#.# => ##.#/.#.#/####/.##.
		###/.../#.# => #..#/.#.#/#.../#..#
		###/#../#.# => ..##/###./.###/..##
		#.#/.#./#.# => #.##/#.#./##../...#
		###/.#./#.# => ..#./.###/..##/#...
		###/##./#.# => #.../...#/..##/.###
		#.#/#.#/#.# => #..#/.#../...#/#..#
		###/#.#/#.# => ###./#.../##../.##.
		#.#/###/#.# => ...#/..#./...#/#..#
		###/###/#.# => ###./####/.###/###.
		###/#.#/### => .###/.#../..../##.#
		###/###/### => #..#/.###/##../.##.
	`;

	describe('Part 1', () => {
		it('5 iterations', function(done) {
			this.timeout(360000);
			assert.equal(190, day.part_one(rules, 5));
			done();
		});
	});

	describe('Part 2', () => {
		it('18 iterations', function(done) {
			this.timeout(360000);
			assert.equal(2335049, day.part_two(rules, 18));
			done();
		});
	});
});